
package sec.notary.client.ws;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "NotaryWebService", targetNamespace = "http://ws.server.notary.sec/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface NotaryWebService {


    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "intentionToSell", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.IntentionToSell")
    @ResponseWrapper(localName = "intentionToSellResponse", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.IntentionToSellResponse")
    @Action(input = "http://ws.server.notary.sec/NotaryWebService/intentionToSellRequest", output = "http://ws.server.notary.sec/NotaryWebService/intentionToSellResponse")
    public boolean intentionToSell();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStateOfGood", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.GetStateOfGood")
    @ResponseWrapper(localName = "getStateOfGoodResponse", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.GetStateOfGoodResponse")
    @Action(input = "http://ws.server.notary.sec/NotaryWebService/getStateOfGoodRequest", output = "http://ws.server.notary.sec/NotaryWebService/getStateOfGoodResponse")
    public String getStateOfGood(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

    /**
     * 
     * @return
     *     returns boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "transferGood", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.TransferGood")
    @ResponseWrapper(localName = "transferGoodResponse", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.TransferGoodResponse")
    @Action(input = "http://ws.server.notary.sec/NotaryWebService/transferGoodRequest", output = "http://ws.server.notary.sec/NotaryWebService/transferGoodResponse")
    public boolean transferGood();

    /**
     * 
     * @return
     *     returns int
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getNotaryId", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.GetNotaryId")
    @ResponseWrapper(localName = "getNotaryIdResponse", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.GetNotaryIdResponse")
    @Action(input = "http://ws.server.notary.sec/NotaryWebService/getNotaryIdRequest", output = "http://ws.server.notary.sec/NotaryWebService/getNotaryIdResponse")
    public int getNotaryId();

    /**
     * 
     * @return
     *     returns java.util.List<java.lang.String>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getUsers", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.GetUsers")
    @ResponseWrapper(localName = "getUsersResponse", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.GetUsersResponse")
    @Action(input = "http://ws.server.notary.sec/NotaryWebService/getUsersRequest", output = "http://ws.server.notary.sec/NotaryWebService/getUsersResponse")
    public List<String> getUsers();

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "test", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.Test")
    @ResponseWrapper(localName = "testResponse", targetNamespace = "http://ws.server.notary.sec/", className = "sec.notary.client.ws.TestResponse")
    @Action(input = "http://ws.server.notary.sec/NotaryWebService/testRequest", output = "http://ws.server.notary.sec/NotaryWebService/testResponse")
    public String test(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0);

}
